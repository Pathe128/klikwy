"use client"

import { useState, useEffect } from 'react';
import { useSession, signOut } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import { User, Mail, Phone, MapPin, Lock, Bell, Globe, CreditCard, Shield, Plus } from 'lucide-react';

type TabType = 'profil' | 'securite' | 'notifications' | 'preferences' | 'paiement' | 'confidentialite';

type UserProfile = {
  name: string;
  email: string;
  phone: string;
  address: string;
  bio: string;
  avatar: string;
};

const SettingsPage = () => {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState<TabType>('profil');
  const [isEditing, setIsEditing] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [profile, setProfile] = useState<UserProfile>({
    name: '',
    email: '',
    phone: '',
    address: '',
    bio: '',
    avatar: ''
  });

  // Charger les données du profil
  useEffect(() => {
    if (status === 'authenticated' && session?.user) {
      // Simuler un chargement de profil
      setTimeout(() => {
        setProfile({
          name: session.user?.name || 'Utilisateur',
          email: session.user?.email || '',
          phone: '+33 6 12 34 56 78',
          address: '123 Rue de la Paix, 75001 Paris',
          bio: 'Développeur web passionné par la création d\'expériences utilisateur exceptionnelles.',
          avatar: session.user?.image || '/default-avatar.png'
        });
        setIsLoading(false);
      }, 500);
    } else if (status === 'unauthenticated') {
      router.push('/auth/login');
    }
  }, [status, session, router]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setProfile(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSaveProfile = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSaving(true);
    
    try {
      // Simuler une sauvegarde
      await new Promise(resolve => setTimeout(resolve, 1000));
      setIsEditing(false);
    } catch (error) {
      console.error('Erreur lors de la sauvegarde du profil:', error);
    } finally {
      setIsSaving(false);
    }
  };

  const tabs = [
    { id: 'profil', icon: <User className="h-5 w-5" />, label: 'Profil' },
    { id: 'securite', icon: <Lock className="h-5 w-5" />, label: 'Sécurité' },
    { id: 'notifications', icon: <Bell className="h-5 w-5" />, label: 'Notifications' },
    { id: 'preferences', icon: <Globe className="h-5 w-5" />, label: 'Préférences' },
    { id: 'paiement', icon: <CreditCard className="h-5 w-5" />, label: 'Paiement' },
    { id: 'confidentialite', icon: <Shield className="h-5 w-5" />, label: 'Confidentialité' },
  ];

  if (isLoading || status === 'loading') {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="lg:grid lg:grid-cols-12 lg:gap-x-5">
          {/* Sidebar */}
          <aside className="py-6 px-2 sm:px-6 lg:py-0 lg:px-0 lg:col-span-3">
            <nav className="space-y-1">
              {tabs.map((tab) => (
                <button
                  key={tab.id}
                  type="button"
                  onClick={() => setActiveTab(tab.id as TabType)}
                  className={`${
                    activeTab === tab.id
                      ? 'bg-blue-50 border-blue-500 text-blue-700 hover:bg-blue-50 hover:text-blue-700'
                      : 'border-transparent text-gray-900 hover:bg-gray-50 hover:text-gray-900'
                  } group border-l-4 px-3 py-2 flex items-center text-sm font-medium w-full`}
                >
                  <div className={`${
                    activeTab === tab.id ? 'text-blue-500' : 'text-gray-400'
                  } flex-shrink-0 -ml-1 mr-3 h-6 w-6`}>
                    {tab.icon}
                  </div>
                  <span className="truncate">{tab.label}</span>
                </button>
              ))}
            </nav>
          </aside>

          {/* Main content */}
          <div className="space-y-6 sm:px-6 lg:px-0 lg:col-span-9">
            <div className="bg-white shadow overflow-hidden sm:rounded-lg">
              <div className="px-4 py-5 sm:px-6 flex justify-between items-center">
                <div>
                  <h3 className="text-lg leading-6 font-medium text-gray-900">
                    {activeTab === 'profil' ? 'Profil' : 
                     activeTab === 'securite' ? 'Sécurité' : 
                     activeTab === 'notifications' ? 'Notifications' : 
                     activeTab === 'preferences' ? 'Préférences' : 
                     activeTab === 'paiement' ? 'Paiement' : 'Confidentialité'}
                  </h3>
                  <p className="mt-1 max-w-2xl text-sm text-gray-500">
                    Gérer vos paramètres {activeTab === 'profil' ? 'de profil' : `de ${activeTab}`}.
                  </p>
                </div>
                {activeTab === 'profil' && (
                  <button
                    type="button"
                    onClick={() => setIsEditing(!isEditing)}
                    className="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    {isEditing ? 'Annuler' : 'Modifier'}
                  </button>
                )}
              </div>
              
              {/* Main Content */}
              <div className="border-t border-gray-200 px-4 py-5 sm:px-6">
                {/* Profile Tab */}
                {activeTab === 'profil' && (
                  <div className="space-y-6">
                    <div className="flex items-center space-x-6">
                      <div className="flex-shrink-0 h-16 w-16">
                        <img
                          className="h-16 w-16 rounded-full"
                          src={profile.avatar}
                          alt={profile.name}
                        />
                      </div>
                      <div>
                        <h3 className="text-lg font-medium text-gray-900">{profile.name}</h3>
                        <p className="text-sm text-gray-500">{profile.email}</p>
                      </div>
                      {isEditing && (
                        <div className="ml-auto">
                          <label className="cursor-pointer inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                            <span>Changer de photo</span>
                            <input 
                              type="file" 
                              className="sr-only" 
                              onChange={(e) => {
                                if (e.target.files && e.target.files[0]) {
                                  const reader = new FileReader();
                                  reader.onload = (event) => {
                                    setProfile({
                                      ...profile,
                                      avatar: event.target?.result as string
                                    });
                                  };
                                  reader.readAsDataURL(e.target.files[0]);
                                }
                              }} 
                            />
                          </label>
                          <p className="mt-2 text-xs text-gray-500">
                            JPG, GIF ou PNG. Taille maximale : 2MB
                          </p>
                        </div>
                      )}
                    </div>

                    <form onSubmit={handleSaveProfile}>
                      <div className="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
                        <div className="sm:col-span-3">
                          <label htmlFor="name" className="block text-sm font-medium text-gray-700">
                            Nom complet
                          </label>
                          {isEditing ? (
                            <input
                              type="text"
                              name="name"
                              id="name"
                              value={profile.name}
                              onChange={handleInputChange}
                              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                            />
                          ) : (
                            <p className="mt-1 text-sm text-gray-900">{profile.name}</p>
                          )}
                        </div>

                        <div className="sm:col-span-4">
                          <label htmlFor="email" className="block text-sm font-medium text-gray-700">
                            Adresse email
                          </label>
                          {isEditing ? (
                            <input
                              type="email"
                              name="email"
                              id="email"
                              value={profile.email}
                              onChange={handleInputChange}
                              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                            />
                          ) : (
                            <p className="mt-1 text-sm text-gray-900">{profile.email}</p>
                          )}
                        </div>

                        <div className="sm:col-span-4">
                          <label htmlFor="phone" className="block text-sm font-medium text-gray-700">
                            Téléphone
                          </label>
                          {isEditing ? (
                            <input
                              type="tel"
                              name="phone"
                              id="phone"
                              value={profile.phone}
                              onChange={handleInputChange}
                              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                            />
                          ) : (
                            <p className="mt-1 text-sm text-gray-900">{profile.phone}</p>
                          )}
                        </div>

                        <div className="sm:col-span-6">
                          <label htmlFor="address" className="block text-sm font-medium text-gray-700">
                            Adresse
                          </label>
                          {isEditing ? (
                            <input
                              type="text"
                              name="address"
                              id="address"
                              value={profile.address}
                              onChange={handleInputChange}
                              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                            />
                          ) : (
                            <p className="mt-1 text-sm text-gray-900">{profile.address}</p>
                          )}
                        </div>

                        <div className="sm:col-span-6">
                          <label htmlFor="bio" className="block text-sm font-medium text-gray-700">
                            À propos de moi
                          </label>
                          {isEditing ? (
                            <textarea
                              id="bio"
                              name="bio"
                              rows={3}
                              value={profile.bio}
                              onChange={handleInputChange}
                              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                              placeholder="Décrivez-vous en quelques mots..."
                            />
                          ) : (
                            <p className="mt-1 text-sm text-gray-900 whitespace-pre-line">{profile.bio}</p>
                          )}
                        </div>
                      </div>

                      {isEditing && (
                        <div className="pt-5">
                          <div className="flex justify-end">
                            <button
                              type="submit"
                              disabled={isSaving}
                              className="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
                            >
                              {isSaving ? 'Enregistrement...' : 'Enregistrer les modifications'}
                            </button>
                          </div>
                        </div>
                      )}
                    </form>
                  </div>
                )}

                {/* Security Tab */}
                {activeTab === 'securite' && (
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium leading-6 text-gray-900">Changer de mot de passe</h3>
                      <p className="mt-1 text-sm text-gray-500">
                        Mettez à jour votre mot de passe pour sécuriser votre compte.
                      </p>
                    </div>

                    <div className="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
                      <div className="sm:col-span-4">
                        <label htmlFor="current-password" className="block text-sm font-medium text-gray-700">
                          Mot de passe actuel
                        </label>
                        <div className="mt-1">
                          <input
                            id="current-password"
                            name="current-password"
                            type="password"
                            autoComplete="current-password"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="sm:col-span-4">
                        <label htmlFor="new-password" className="block text-sm font-medium text-gray-700">
                          Nouveau mot de passe
                        </label>
                        <div className="mt-1">
                          <input
                            id="new-password"
                            name="new-password"
                            type="password"
                            autoComplete="new-password"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="sm:col-span-4">
                        <label htmlFor="confirm-password" className="block text-sm font-medium text-gray-700">
                          Confirmer le nouveau mot de passe
                        </label>
                        <div className="mt-1">
                          <input
                            id="confirm-password"
                            name="confirm-password"
                            type="password"
                            autoComplete="new-password"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                          />
                        </div>
                      </div>
                    </div>

                    <div className="pt-5">
                      <div className="flex justify-end">
                        <button
                          type="button"
                          className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                          Mettre à jour le mot de passe
                        </button>
                      </div>
                    </div>
                  </div>
                )}

                {/* Other tabs can be implemented similarly */}
                {activeTab === 'notifications' && (
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium leading-6 text-gray-900">Paramètres de notification</h3>
                      <p className="mt-1 text-sm text-gray-500">
                        Contrôlez comment vous recevez les notifications.
                      </p>
                    </div>
                    <div className="bg-white shadow overflow-hidden sm:rounded-lg">
                      <div className="px-4 py-5 sm:px-6">
                        <h3 className="text-lg leading-6 font-medium text-gray-900">Préférences de notification</h3>
                        <p className="mt-1 max-w-2xl text-sm text-gray-500">
                          Personnalisez vos préférences de notification.
                        </p>
                      </div>
                      <div className="border-t border-gray-200 px-4 py-5 sm:p-0">
                        <dl className="sm:divide-y sm:divide-gray-200">
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Notifications par email</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <div className="flex items-center">
                                <input
                                  id="email-notifications"
                                  name="email-notifications"
                                  type="checkbox"
                                  className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                  defaultChecked
                                />
                                <label htmlFor="email-notifications" className="ml-2 block text-sm text-gray-700">
                                  Recevoir des notifications par email
                                </label>
                              </div>
                            </dd>
                          </div>
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Notifications push</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <div className="flex items-center">
                                <input
                                  id="push-notifications"
                                  name="push-notifications"
                                  type="checkbox"
                                  className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                  defaultChecked
                                />
                                <label htmlFor="push-notifications" className="ml-2 block text-sm text-gray-700">
                                  Activer les notifications push
                                </label>
                              </div>
                            </dd>
                          </div>
                        </dl>
                      </div>
                      <div className="px-4 py-3 bg-gray-50 text-right sm:px-6">
                        <button
                          type="button"
                          className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                          Enregistrer les préférences
                        </button>
                      </div>
                    </div>
                  </div>
                )}

                {/* Preferences Tab */}
                {activeTab === 'preferences' && (
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium leading-6 text-gray-900">Préférences générales</h3>
                      <p className="mt-1 text-sm text-gray-500">
                        Personnalisez l'apparence et le comportement de votre compte.
                      </p>
                    </div>
                    <div className="bg-white shadow overflow-hidden sm:rounded-lg">
                      <div className="px-4 py-5 sm:px-6">
                        <h3 className="text-lg leading-6 font-medium text-gray-900">Langue et région</h3>
                        <p className="mt-1 max-w-2xl text-sm text-gray-500">
                          Personnalisez la langue et le fuseau horaire.
                        </p>
                      </div>
                      <div className="border-t border-gray-200 px-4 py-5 sm:p-0">
                        <dl className="sm:divide-y sm:divide-gray-200">
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Langue</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <select
                                id="language"
                                name="language"
                                className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                              >
                                <option>Français</option>
                                <option>English</option>
                                <option>Español</option>
                                <option>Deutsch</option>
                              </select>
                            </dd>
                          </div>
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Fuseau horaire</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <select
                                id="timezone"
                                name="timezone"
                                className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                              >
                                <option>Europe/Paris (UTC+02:00)</option>
                                <option>UTC</option>
                                <option>America/New_York (UTC-04:00)</option>
                                <option>Asia/Tokyo (UTC+09:00)</option>
                              </select>
                            </dd>
                          </div>
                        </dl>
                      </div>
                      <div className="px-4 py-3 bg-gray-50 text-right sm:px-6">
                        <button
                          type="button"
                          className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                          Enregistrer les préférences
                        </button>
                      </div>
                    </div>
                  </div>
                )}

                {/* Payment Tab */}
                {activeTab === 'paiement' && (
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium leading-6 text-gray-900">Méthodes de paiement</h3>
                      <p className="mt-1 text-sm text-gray-500">
                        Gérer vos méthodes de paiement et vos abonnements.
                      </p>
                    </div>
                    <div className="bg-white shadow overflow-hidden sm:rounded-lg">
                      <div className="px-4 py-5 sm:px-6">
                        <h3 className="text-lg leading-6 font-medium text-gray-900">Cartes enregistrées</h3>
                        <p className="mt-1 max-w-2xl text-sm text-gray-500">
                          Vos méthodes de paiement enregistrées.
                        </p>
                      </div>
                      <div className="border-t border-gray-200 px-4 py-5 sm:p-0">
                        <dl className="sm:divide-y sm:divide-gray-200">
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Carte principale</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              •••• •••• •••• 4242 (Visa)
                            </dd>
                            <dd className="mt-1 text-sm text-gray-500 sm:col-start-2 sm:col-span-2">
                              Expire le 12/25
                            </dd>
                          </div>
                        </dl>
                      </div>
                      <div className="px-4 py-3 bg-gray-50 sm:px-6">
                        <button
                          type="button"
                          className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                          <Plus className="-ml-1 mr-2 h-5 w-5" />
                          Ajouter une carte
                        </button>
                      </div>
                    </div>
                  </div>
                )}

                {/* Privacy Tab */}
                {activeTab === 'confidentialite' && (
                  <div className="space-y-6">
                    <div>
                      <h3 className="text-lg font-medium leading-6 text-gray-900">Confidentialité</h3>
                      <p className="mt-1 text-sm text-gray-500">
                        Contrôlez comment vos données sont partagées et utilisées.
                      </p>
                    </div>
                    <div className="bg-white shadow overflow-hidden sm:rounded-lg">
                      <div className="px-4 py-5 sm:px-6">
                        <h3 className="text-lg leading-6 font-medium text-gray-900">Paramètres de confidentialité</h3>
                        <p className="mt-1 max-w-2xl text-sm text-gray-500">
                          Gérez vos préférences de confidentialité.
                        </p>
                      </div>
                      <div className="border-t border-gray-200 px-4 py-5 sm:p-0">
                        <dl className="sm:divide-y sm:divide-gray-200">
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Profil public</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <div className="flex items-center">
                                <input
                                  id="public-profile"
                                  name="public-profile"
                                  type="checkbox"
                                  className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                />
                                <label htmlFor="public-profile" className="ml-2 block text-sm text-gray-700">
                                  Rendre mon profil public
                                </label>
                              </div>
                              <p className="mt-2 text-sm text-gray-500">
                                Votre profil sera visible par les autres utilisateurs.
                              </p>
                            </dd>
                          </div>
                          <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt className="text-sm font-medium text-gray-500">Partage de données</dt>
                            <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                              <div className="flex items-center">
                                <input
                                  id="data-sharing"
                                  name="data-sharing"
                                  type="checkbox"
                                  className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                  defaultChecked
                                />
                                <label htmlFor="data-sharing" className="ml-2 block text-sm text-gray-700">
                                  Partager des données d'analyse
                                </label>
                              </div>
                              <p className="mt-2 text-sm text-gray-500">
                                Aidez-nous à améliorer nos services en partageant des données d'utilisation anonymes.
                              </p>
                            </dd>
                          </div>
                        </dl>
                      </div>
                      <div className="px-4 py-3 bg-gray-50 text-right sm:px-6">
                        <button
                          type="button"
                          className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                          Enregistrer les paramètres
                        </button>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;
